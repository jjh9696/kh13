{"version":3,"file":"static/js/764.808debec.chunk.js","mappings":"2JAEA,MAwDA,EAxDgBA,KACd,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,OAErCK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAK,IAAIC,UAAU,kCAiBzB,OAfAD,EAAGE,OAAS,KACVC,QAAQC,IAAI,yBAAyB,EAGvCJ,EAAGK,UAAaC,IACd,MAAMC,EAAeC,KAAKC,MAAMH,EAAMI,MACtCjB,EAAac,EAAa,EAG5BP,EAAGW,QAAU,KACXR,QAAQC,IAAI,8BAA8B,EAG5CN,EAAUE,GAEH,KACDH,GACFA,EAAOe,OACT,CACD,GACA,IAQH,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,SAC9BtB,EAAUyB,KAAKC,IACdH,EAAAA,EAAAA,KAAA,UAEEI,QAASA,KAAMC,OAdIC,EAcgBH,EAASI,eAbhDzB,GAAUA,EAAO0B,aAAetB,UAAUuB,MAC5C3B,EAAO4B,KAAKjB,KAAKkB,UAAU,CAAEL,iBAFJA,KAcoC,EACvDL,UAAU,eAAcF,SAEvBI,EAASS,iBAJLT,EAASI,gBAQpBP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBF,SAAEnB,MAC7B,C","sources":["components/integrated/chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Chatbot = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answer, setAnswer] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket('ws://localhost:8080/ws/chatbot');\r\n\r\n    ws.onopen = () => {\r\n      console.log('Connected to WebSocket');\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      const receivedData = JSON.parse(event.data);\r\n      setQuestions(receivedData);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('Disconnected from WebSocket');\r\n    };\r\n\r\n    setSocket(ws);\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleQuestionClick = (questionNo) => {\r\n    if (socket && socket.readyState === WebSocket.OPEN) {\r\n      socket.send(JSON.stringify({ questionNo }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>챗봇 예제</h1>\r\n      <hr />\r\n      <div className=\"question-wrapper\">\r\n        {questions.map((question) => (\r\n          <button\r\n            key={question.chatbotNo}\r\n            onClick={() => handleQuestionClick(question.chatbotNo)}\r\n            className=\"btn-question\"\r\n          >\r\n            {question.chatbotQuestion}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"answer-wrapper\">{answer}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"names":["Chatbot","questions","setQuestions","useState","answer","setAnswer","socket","setSocket","useEffect","ws","WebSocket","onopen","console","log","onmessage","event","receivedData","JSON","parse","data","onclose","close","_jsxs","children","_jsx","className","map","question","onClick","handleQuestionClick","questionNo","chatbotNo","readyState","OPEN","send","stringify","chatbotQuestion"],"sourceRoot":""}