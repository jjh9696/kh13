{"version":3,"file":"static/js/850.c5b826fc.chunk.js","mappings":"6LAgFA,QAtEA,WAGI,MAAOA,EAASC,IAAcC,EAAAA,EAAAA,IAAeC,EAAAA,KACtCC,EAAYC,IAAiBH,EAAAA,EAAAA,IAAeI,EAAAA,IAG7CC,GAAUC,EAAAA,EAAAA,IAAeC,EAAAA,IAGzBC,GAASC,EAAAA,EAAAA,cAAY,KAEvBV,EAAW,IACXI,EAAc,WACPO,EAAAA,EAAMC,SAASC,QAAQC,OAAsB,cACpDC,OAAOC,aAAaC,WAAW,eAAe,GAC/C,CAAClB,EAASI,IAEb,OACIe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kCAAkC,gBAAc,OAAMD,UACjEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAE5BF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACF,UAAU,eAAeG,GAAG,IAAGJ,SAAC,sCACzCF,EAAAA,EAAAA,KAAA,UAAQG,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,gBAAgB,gBAAc,QAAQ,aAAW,oBAAmBL,UACzLF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,2BAEpBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2BAA2BK,GAAG,gBAAeN,SAAA,EACxDE,EAAAA,EAAAA,MAAA,MAAID,UAAU,qBAAoBD,SAAA,EAC9BE,EAAAA,EAAAA,MAAA,MAAID,UAAU,oBAAmBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,2BAA2B,iBAAe,WAAWM,KAAK,IAAIC,KAAK,SAAS,gBAAc,OAAO,gBAAc,QAAOR,SAAC,uBACpIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC1BF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACF,UAAU,gBAAgBG,GAAG,WAAUJ,SAAC,uBAIzDE,EAAAA,EAAAA,MAAA,MAAID,UAAU,oBAAmBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,2BAA2B,iBAAe,WACnDM,KAAK,IAAIC,KAAK,SAAS,gBAAc,OACrC,gBAAc,QAAOR,SAAC,YAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,SACzBd,GACGY,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACF,UAAU,gBAAgBG,GAAG,IAClCK,QAASC,GAAKrB,IAASW,SAAC,0CAE5BF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACF,UAAU,gBAAgBG,GAAG,SAAQJ,SAAC,4CAO/DF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,SAC7Bd,GACGY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,4CAIFF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,4DAUlC,C","sources":["components/Menu.js"],"sourcesContent":["//화면 상단에 배치할 메뉴(예전 navigator.jsp)\r\n\r\n//import\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { isLoginState, loginIdState, loginLevelState } from \"./utils/RecoilData\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport axios from \"./utils/CustomAxios\";\r\n\r\n//function\r\nfunction Menu() {\r\n\r\n    //recoil state\r\n    const [loginId, setLoginId] = useRecoilState(loginIdState);\r\n    const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n\r\n    //recoil value\r\n    const isLogin = useRecoilValue(isLoginState);\r\n\r\n    //callback\r\n    const logout = useCallback(() => {\r\n        //recoil 저장소에 대한 정리 + axios의 헤더 제거 + localStorage 청소\r\n        setLoginId('');\r\n        setLoginLevel('');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        window.localStorage.removeItem(\"refreshToken\");\r\n    }, [loginId, loginLevel]);\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg bg-dark\" data-bs-theme=\"dark\">\r\n                <div className=\"container-fluid\">\r\n                    {/* React에서는 페이지간 이동을 NavLink 태그로 한다 */}\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">KH정보교육원</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                        <ul className=\"navbar-nav me-auto\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">State예제</a>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <NavLink className=\"dropdown-item\" to=\"/chatbot\">챗봇</NavLink>\r\n                                </div>\r\n                            </li>\r\n                           \r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\"\r\n                                    href=\"#\" role=\"button\" aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">Recoil</a>\r\n                                <div className=\"dropdown-menu\">\r\n                                    {isLogin ? (\r\n                                        <NavLink className=\"dropdown-item\" to=\"#\"\r\n                                            onClick={e => logout()}>진짜로그아웃</NavLink>\r\n                                    ) : (\r\n                                        <NavLink className=\"dropdown-item\" to=\"/login\">진짜로그인</NavLink>\r\n                                    )}\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {/* 이 부분을 로그인 여부에 따라 다르게 표시 */}\r\n                        <div className=\"d-flex text-light\">\r\n                            {isLogin ? (\r\n                                <>\r\n                                    현재 로그인 중\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    현재 로그아웃 중\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Menu;"],"names":["loginId","setLoginId","useRecoilState","loginIdState","loginLevel","setLoginLevel","loginLevelState","isLogin","useRecoilValue","isLoginState","logout","useCallback","axios","defaults","headers","common","window","localStorage","removeItem","_jsx","_Fragment","children","className","_jsxs","NavLink","to","type","id","href","role","onClick","e"],"sourceRoot":""}